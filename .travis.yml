sudo: false
language: cpp
env:
  matrix:
  - PRK_TARGET=allserial
  - PRK_TARGET=allc1z
  - PRK_TARGET=allcxx
  - PRK_TARGET=allpython
  # Octave is working but it takes forever to brew (~20 minutes).
  #- PRK_TARGET=alloctave
  - PRK_TARGET=alljulia
  - PRK_TARGET=allrust
  - PRK_TARGET=allopenmp
  - PRK_TARGET=allfortran
  - PRK_TARGET=allmpi
  - PRK_TARGET=allshmem
  - PRK_TARGET=allampi
  - PRK_TARGET=allfgmpi
  - PRK_TARGET=allcharm++
  #- PRK_TARGET=allgrappa
  - PRK_TARGET=allupc UPC_IMPL=gupc
  - PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=smp PRK_FLAGS="-Wc,-O3"
  # This works but we don't need to test it.
  #- PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=udp PRK_FLAGS="-Wc,-O3"
  # Optional: We do not need to test BUPC this thoroughly every time
  #- PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=mpi PRK_FLAGS="-Wc,-O3"
  #- PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=ofi PRK_FLAGS="-Wc,-O3"
  # Chapel kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allchapel CHPL_COMM=none
  #- PRK_TARGET=allchapel CHPL_COMM=gasnet
  # HPX-3 kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allhpx3
  # HPX-5 kernels are not merged yet.  Activate these when they are.
  #- PRK_TARGET=allhpx5
  global:
  - secure: "oLiTOLZlbVt0CbaPao3CaVoEGTtOPCQ6cfU98AOR616i6IuZCW13K8OIstD5GbvO6AHCVTH1jonJZ7bBCTF5C0gTWLTNbwMNMKAbsdedieSlLkTcAQkpJzYBuUfL8IXhm6VivguAewD8axzWMUXUbKJBUYEftOHtN6SFu/M7OnLrWWim5hgFnUakrq+hjVmIsMX9rKaARLCRsrN/M0GQ8/BhFHDl++1oLPc3loaieLsDC4riMZE8wxp/6U5peN5iosxwJhsDtYo/GGPv5oivvcSFErAkM9PrIhoNn7DiHfxrx331V0ukf8zDP93pxDx/9L2yERoTUdw5fk6NG6LX6r2WT2iR+JuR4ZdyCdbUaGyWY0VMwXLIholHQU0d2tI2S5rHue/btFRrHJbhOyujX9rJhPx407aZU7ZOZYfy9OPo3r8ekzlDJRfSceykFeIg97HdJ+sqguSs1ZYHbQAQGoPyxcVhw/+Fz//k+hndyGui1AaOLnihaY4KQwoMijJsa3+7X6RS9supSKzlk5JWzF9lLbNOoPO04VGGnLdfqhHNImQWZNsYoP0E4VnKcMXKulyF0bDsoCDookQzTJwYgi+F/drZjKDw9iyMvT1gWM+T0uAo7fHUnomTgEUIYeJppkETKuZEg3aZ+rUekcygYvrEVf5/2sgrRMBxXzE1U9I="
  - secure: "j2SveaWkbcxRTK3c27qkdD7o0GvCrIMjx2GcVa4YOKtkKWiE5CdocPugDKdPzBhoehVKqD7u3w6ZFep1lm3+VSHwxuKC2I28fTFmGmxQUUEcXAlAc3HfcdOctqOjPL0w8oLRduGiN4fc1D7KEW7uqwT7kTYIm9qXCr2lDyigUjLrulnt5N/o64Xr8j9yKE1s3JNcuibvkTGYoMISJ8i271XjWEewzY8lJziWYqVSv2MsKr1Epl7TDNCLVhHbFq+DAJfCFilvNDngFXOzNfuYYoKCzxaDOk6dWtjCH70D0YZfOtJJJjFOzAG8Q14IklWQlcm69pFQCoveEUOaUULBDJ1B9O+wdmj56dm592+QdUI7onefqcrTFcQ/O3q18EgtKRjPt5Y52iaOBzW8gF+570G1MSX69KpazmEbeEzefPewIi9adwduBhnzdy27hFzPocA+1xrzjSSTFFfAPl0/boJlhOyUtY25VquqIUqUPLbkMWe2hX2FDr8G9O9mJ4jsvTYBNXhW95cELxepJ9zok7XUTB64e8ElTTOjcUk39cejIT2tF2/fur8Ld9HpXtFgUarq+RgDLG3QOOgeu93DiyYhKIgxfSntnAc4/4ACI2PPBju0wXYBpIEBIykCFNRTuoVMGt4r2FQcSztHQs6rj7SCXHFzAxmBcEbLd4GvTJE="
# this is for Python, per http://danielnouri.org/notes/2012/11/23/use-apt-get-to-install-python-dependencies-for-travis-ci/
virtualenv:
  system_site_packages: true
os:
- linux
- osx
compiler:
- gcc
- clang
matrix:
  exclude:
  # Clang does not support OpenMP yet and not willing to build from source.  Save this for Mac where we can Brew it.
  - os: linux
    compiler: clang
    env: PRK_TARGET=allopenmp
  # dealing with broken GCC on Mac not worth it here
  - os: osx
    compiler: gcc
    env: PRK_TARGET=allopenmp
  # Clang UPC requires source build, which probably takes too long
  - compiler: clang
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Source build impossible (too much time+stdout)
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  - compiler: clang
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Revisit this once Grappa is working with Clang
  - compiler: gcc
    env: PRK_TARGET=allgrappa
  # Mac + Chapel + GASNet does not work and I do not care
  - os: osx
    env: PRK_TARGET=allchapel CHPL_COMM=gasnet
  # UPC GASNet OFI conduit is busted, perhaps due to SSH spawner
  - env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=ofi PRK_FLAGS="-Wc,-O3"
  # probably because of old GCC (4.6)
  - os: linux
    compiler: gcc
    env: PRK_TARGET=allhpx5
  # Travis whitelist missing three Boost packages HPX-3 needs
  - os: linux
    env: PRK_TARGET=allhpx3
  # LLVM Fortran is not ready.
  - compiler: clang
    env: PRK_TARGET=allfortran
  # Skip Linux because we rely on Homebrew for these
  - os: linux
    env: PRK_TARGET=alloctave
  - os: linux
    env: PRK_TARGET=allrust
  # Python/Julia/Octave does not use compiler so only test one of them per OS (Clang)
  # GCC
  - compiler: gcc
    env: PRK_TARGET=allpython
  - compiler: gcc
    env: PRK_TARGET=alloctave
  - compiler: gcc
    env: PRK_TARGET=alljulia
  - compiler: gcc
    env: PRK_TARGET=allrust
  # UPC over MPICH on Mac hangs - may be async progress issue
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=mpi PRK_FLAGS="-Wc,-O3"
  # BUPC on Mac is annoying
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=udp PRK_FLAGS="-Wc,-O3"
  - os: osx
    env: PRK_TARGET=allupc UPC_IMPL=bupc GASNET_CONDUIT=smp PRK_FLAGS="-Wc,-O3"
  # Charm++ on Mac is not working for us.
  - os: osx
    env: PRK_TARGET=allcharm++
  # We have lots of Grappa issues.  Need to resolve outside of Travis.
  - env: PRK_TARGET=allgrappa
  # Mac issue with thread_t (see https://github.com/humairakamal/fgmpi/pull/1)
  - os: osx
    env: PRK_TARGET=allfgmpi
  allow_failures:
  # Travis trusty breaks this
  - os: linux
    env: PRK_TARGET=allupc UPC_IMPL=gupc
  # Travis tests failing due to runtime problems
  - os: linux
    env: PRK_TARGET=allampi
  - os: linux
    env: PRK_TARGET=allfgmpi
  - os: linux
    env: PRK_TARGET=allmpi
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    # works on Precise and Trusty
    # see https://docs.travis-ci.com/user/languages/c/ for details
    - llvm-toolchain-precise-3.8
    #  Boost is for Grappa, HPX, C++ rangefor, pstl
    - boost-latest
    packages:
    - python-numpy
    - gcc-5
    - g++-5
    - gfortran-5
    - gcc-6
    - g++-6
    - gfortran-6
    # Required by GUPC
    - libnuma-dev
    # This should provide OpenMP
    - clang-3.8
    - clang-3.9
    # Grappa and HPX use CMake
    - cmake
    # C++ code needs range headers
    - libboost-all-dev
before_install:
- pwd
- export TRAVIS_HOME=$PWD
- export TRAVIS_ROOT=$TRAVIS_HOME/PRK-deps
- mkdir -p $TRAVIS_ROOT
- sh ./travis/install-intel.sh $TRAVIS_ROOT $PRK_TARGET
- source ~/.bashrc
install:
- export PATH=$TRAVIS_ROOT/bin:$PATH
- export PATH=$TRAVIS_ROOT/gcc/bin:$PATH
- export PATH=$TRAVIS_ROOT/cmake/bin:$PATH
- sh ./travis/install-deps.sh $TRAVIS_ROOT $PRK_TARGET
before_script:
- pwd
script:
- sh ./travis/build-run-prk.sh $TRAVIS_ROOT $PRK_TARGET
after_failure:
- echo "Sad panda"
- find . -name config.log -exec grep -L "configure: exit 0" {} ";" | xargs cat
#- find . -name CMakeOutput.log -exec cat {} ";"
#- find . -name CMakeError.log -exec cat {} ";"
notifications:
  email:
    recipients:
    - jeff.science@gmail.com
    on_success:
    - change
    on_failure:
    - always
