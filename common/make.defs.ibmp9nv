#
# This file shows the IBM POWER9 + NVIDIA V100 toolchain options for PRKs using
# OpenMP, MPI and/or Fortran (sans coarrays) only.
#
# Base compilers and language options
#
# C99 is required in some implementations.
CC=xlc_r -qlanglvl=stdc99
# All of the Fortran code is written for the 2008 standard and requires preprocessing.
# You might need to modify the build system for the preprocessor options to work.
FC=xlf2008_r
XLFPP=-WF,
# C++11 may not be required but does no harm here.
CXX=xlcxx_r
#
# Compiler flags
#
DEFAULT_OPT_FLAGS=-O3
#
# OpenMP flags
#
# You can also use -qopenmp.  -openmp is deprecated.
OPENMPFLAG=-qsmp=omp
OPENMPSIMDFLAG=-qsmp=omp
OFFLOADFLAG=-qoffload -qtgtarch=sm_70
#
# OpenCL flags
#
# POCL
# http://portablecl.org/docs/html/using.html#linking-your-program-directly-with-pocl is not correct...
#OPENCLFLAG=-I/opt/pocl/latest/include -L/opt/pocl/latest/lib -lpoclu -I/opt/pocl/latest/share/pocl/include -lOpenCL
# Linux
#OPENCLDIR=/etc/alternatives/opencl-intel-tools
#OPENCLFLAG=-I${OPENCLDIR} -L${OPENCLDIR}/lib64 -lOpenCL -Wno-deprecated-declarations
#
# SYCL flags
#
# triSYCL
# https://github.com/triSYCL/triSYCL is header-only so just clone in Cxx11 directory...
SYCLDIR=./triSYCL
#SYCLCXX=${CXX} ${OPENMPFLAG} $(DEFAULT_OPT_FLAGS)
SYCLCXX=${CXX} $(DEFAULT_OPT_FLAGS)
SYCLFLAG=-std=gnu++17 -I$(SYCLDIR)/include -DTRISYCL
#
# OCCA
#
#OCCADIR=${HOME}/prk-repo/Cxx11/occa
#
# TBB
#
TBBDIR=.
TBBFLAG=-DUSE_TBB -I${TBBDIR}/include -L${TBBDIR}/lib -ltbb
#TBBFLAG=-DUSE_TBB -I${TBBDIR}/include -L${TBBDIR}/lib -L${TBBDIR}/lib/intel64_lin/gcc4.7 -ltbb
#
# Parallel STL, Boost, etc.
#
BOOSTFLAG=
RANGEFLAG=-DUSE_BOOST_IRANGE ${BOOSTFLAG}
RANGEFLAG=-DUSE_RANGES_TS -I./range-v3/include
PSTLFLAG=${OPENMPSIMDFLAG} ${TBBFLAG} -DUSE_INTEL_PSTL -I./pstl/include ${RANGEFLAG} -Wno-\#pragma-messages
KOKKOSDIR=
KOKKOSFLAG=-I${KOKKOSDIR}/include -L${KOKKOSDIR}/lib -lkokkos ${OPENMPFLAG} -ldl
RAJADIR=
RAJAFLAG=-I${RAJADIR}/include -L${RAJADIR}/lib -lRAJA ${OPENMPFLAG} ${TBBFLAG}
THRUSTDIR=/opt/nvidia/thrust
THRUSTFLAG=-I${THRUSTDIR} ${RANGEFLAG}
#
# CBLAS for C++ DGEMM
#
BLASFLAG=-DESSL
CBLASFLAG=-DESSL
#
# CUDA flags
#
# Linux w/ NVIDIA CUDA
NVCC=nvcc -arch=sm_50
CUDAFLAGS=-g -O3 -std=c++11
