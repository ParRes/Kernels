#
# This file shows the GCC toolchain options for PRKs using
# OpenMP, MPI and/or Fortran coarrays only.
#
# Base compilers and language options
#
VERSION=-7
# C99 is required in some implementations.
CC=gcc${VERSION} -std=gnu99
# All of the Fortran code is written for the 2008 standard and requires preprocessing.
FC=gfortran${VERSION} -std=f2008 -cpp
# C++11 may not be required but does no harm here.
CXX=g++${VERSION} -std=gnu++11
#
# Compiler flags
#
# -mtune=native is appropriate for most cases.
# -march=native is appropriate if you want portable binaries.
DEFAULT_OPT_FLAGS=-g -O3 -mtune=native
# If you are compiling for KNL on a Xeon login node, use the following:
# DEFAULT_OPT_FLAGS=-g -O3 -march=knl
# See https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html for details.
#
# OpenMP flags
#
OPENMPFLAG=-fopenmp
OFFLOADFLAG=-foffload="-O3 -v"
ORNLACCFLAG=-fopenacc
#
# OpenCL flags
#
# MacOS
#OPENCLFLAG=-framework OpenCL
# Linux
#OPENCLDIR=/etc/alternatives/opencl-intel-tools
#OPENCLFLAG=-I${OPENCLDIR} -L${OPENCLDIR}/lib64 -lOpenCL
OPENCLFLAG=-I/usr/include -L/usr/lib/x86_64-linux-gnu -lOpenCL
#
# CUDA flags
#
# Mac w/ CUDA emulation via https://github.com/hughperkins/coriander
NVCC=/opt/llvm/cocl/bin/cocl
# Linux w/ NVIDIA CUDA
# NVCC never supports the latest GCC.
# Use appropriate arch or code is compiled to ancient features.
#NVCC=nvcc --compiler-bindir=<path to older GCC> --gpu-architecture=sm_61
CUDAFLAGS=-g -O3 -std=c++11
# https://github.com/tensorflow/tensorflow/issues/1066#issuecomment-200574233
# heavy hammer:
#CUDAFLAGS+=-D_X86INTRIN_H_INCLUDED
# big hammers:
#CUDAFLAGS+=-D_IMMINTRIN_H_INCLUDED
#CUDAFLAGS+=-D_FMA4INTRIN_H_INCLUDED
#CUDAFLAGS+=-D_XOPMMINTRIN_H_INCLUDED
# many tiny hammers:
CUDAFLAGS+=-D_MWAITXINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512FINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512VLINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512BWINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512DQINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512VLBWINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512VBMIVLINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512VBMIINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512VLDQINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512CDINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512PFINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512IFMAINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512IFMAVLINTRIN_H_INCLUDED
CUDAFLAGS+=-D_AVX512ERINTRIN_H_INCLUDED
#
# MPI
#
# We assume you have installed an implementation of MPI-3 that is in your path.
MPICC=mpicc
#
# Fortran 2008 coarrays
#
# see https://github.com/ParRes/Kernels/blob/master/FORTRAN/README.md for details
# single-node
COARRAYFLAG=-fcoarray=single -lcaf_single
# multi-node
# COARRAYFLAG=-fcoarray=lib -lcaf_mpi

